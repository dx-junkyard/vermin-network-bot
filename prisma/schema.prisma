// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model ReportLogBK {
  id                Int      @id @default(autoincrement())
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  type              String
  nextScheduledType String
  content           String
  report            ReportBK @relation(fields: [reportId], references: [id])
  reportId          Int

  @@index([reportId])
  @@map("ReportLog")
}

model ReportContentBK {
  id        Int                     @id @default(autoincrement())
  createdAt DateTime                @default(now())
  updatedAt DateTime                @updatedAt
  animal    String
  damage    String?
  geo       Unsupported("geometry")
  latitude  Float
  longitude Float
  address   String
  report    ReportBK                @relation(fields: [reportId], references: [id])
  reportId  Int                     @unique

  @@index([reportId])
  @@map("ReportContent")
}

model ReportBK {
  id          Int              @id @default(autoincrement())
  userId      String
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  isCompleted Boolean          @default(false)
  isNotified  Boolean          @default(false)
  isDeleted   Boolean          @default(false)
  logs        ReportLogBK[]
  content     ReportContentBK?
  user        UserBK           @relation(fields: [userId], references: [userId])

  @@index([userId])
  @@map("Report")
}

model UserBK {
  id        Int        @id @default(autoincrement())
  userId    String     @unique
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Report    ReportBK[]

  @@map("User")
}

model ReportLog {
  id                Int      @id @default(autoincrement())
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @updatedAt @map("updated_at")
  reportType        String   @map("report_type")
  nextScheduledType String   @map("next_scheduled_type")
  content           String
  report            Report   @relation(fields: [reportId], references: [id])
  reportId          Int      @map("report_id")

  @@index([reportId])
  @@map("REPORT_LOG")
}

model ReportContent {
  id           Int                     @id @default(autoincrement())
  createdAt    DateTime                @default(now()) @map("created_at")
  updatedAt    DateTime                @updatedAt @map("updated_at")
  animal       String
  damage       String?
  geo          Unsupported("geometry")
  latitude     Float
  longitude    Float
  locationName String                  @map("location_name")
  report       Report                  @relation(fields: [reportId], references: [id])
  reportId     Int                     @unique @map("report_id")

  @@index([reportId])
  @@map("REPORT_CONTENT")
}

model Report {
  id          Int            @id @default(autoincrement())
  userId      String         @map("user_id")
  createdAt   DateTime       @default(now()) @map("created_at")
  updatedAt   DateTime       @updatedAt @map("updated_at")
  isCompleted Boolean        @default(false) @map("is_completed")
  isNotified  Boolean        @default(false) @map("is_notified")
  isDeleted   Boolean        @default(false) @map("is_deleted")
  logs        ReportLog[]
  content     ReportContent?
  user        User           @relation(fields: [userId], references: [userId])

  @@index([userId])
  @@map("REPORT")
}

model User {
  id        Int      @id @default(autoincrement())
  userId    String   @unique @map("user_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  Report    Report[]

  @@map("USER")
}
